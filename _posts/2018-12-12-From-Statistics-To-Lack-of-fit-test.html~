<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Background</a></li>
<li><a href="#sec-2">2. Bias and Variance</a>
<ul>
<li><a href="#sec-2-1">2.1. Sampling Deviation</a></li>
<li><a href="#sec-2-2">2.2. Estimator Bias</a></li>
<li><a href="#sec-2-3">2.3. Estimator Variance and Standard Error (SE)</a></li>
<li><a href="#sec-2-4">2.4. Mean Square Error</a></li>
<li><a href="#sec-2-5">2.5. Example: Estimate Mean and Variance (Unbiased Sample Mean and Unbiased Sample Variance)</a>
<ul>
<li><a href="#sec-2-5-1">2.5.1. Supplement</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#sec-3">3. Bias and Variance in Fitting Model</a>
<ul>
<li><a href="#sec-3-1">3.1. The Degree of Freedom in Fitting Model</a></li>
</ul>
</li>
<li><a href="#sec-4">4. The Coefficient of Determination, r-squared</a>
<ul>
<li><a href="#sec-4-1">4.1. Concepts that I don't want to mix up.</a>
<ul>
<li><a href="#sec-4-1-1">4.1.1. Linear Association?</a></li>
<li><a href="#sec-4-1-2">4.1.2. Prediction of The Response on \(x\)</a></li>
</ul>
</li>
<li><a href="#sec-4-2">4.2. R-squared</a></li>
</ul>
</li>
<li><a href="#sec-5">5. Reference</a></li>
</ul>
</div>
</div>
---
layout: post
title: "From Statistics to Lack of Fit Test (1)"
permalink: /:title/
category: Machine Learning
tags: [Machine Learning, Statistical Learning, Feature Engineering]
---
<script type="text/x-mathjax-config">
 MathJax.Hub.Config({
     extensions: ["tex2jax.js"],
     jax: ["input/TeX", "output/HTML-CSS"],
     tex2jax: {
         inlineMath: [ ['$','$'], ["\\(","\\)"] ],
         displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
         processEscapes: true
     },
     "HTML-CSS": { fonts: ["TeX"] }
 });
</script>
<script type="text/javascript"  src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js">
</script>
<head>
   <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
</head>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Background</h2>
<div class="outline-text-2" id="text-1">
<p>
According to Alan Turing, a system, which probably looks pretty complicate, can be described with simple mathmatical equation. In machine learning domain, the models can be usually interpreted with equations, and the parameters of "equations" is what we want to learn. Usually, the parameter we finally get is an estimator of the real value. But how do we describe how good the estimator is?
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Bias and Variance</h2>
<div class="outline-text-2" id="text-2">
<p>
Let's start with the <b>Estimator.</b>
</p>

<p>
The parameter is a quantity of a real model e.g. the mean or the variance of random variable, the parameter of a probability distribution, etc. An estimator, according to <a href="https://en.wikipedia.org/wiki/Estimator">Wikipedia</a> is a rule for calculating an estimate of parameter based on observed data. Because the estimator is calculated by a function of observed data, so the estimator is itself also random variable. (This concept is also the main idea of Bayesian Model in machine learning).
</p>

<p>
Suppose we want to know a paramter \(\theta\), which can be estimated by a sample set \(D_{S}\) drawn from \(X\). \(\hat{\theta}_S(X)\) is denoted as the estimator of \(\theta\) based on observed data of random variable \(X\). Let's denote \(x\) as a particular obseved data \(X=x\). Sampling is an approximation of the real world. So it could happen that for some reasons the sample set doesn't represent the real issuse very well. There are some important quantified properties which are helpful before we dive deeper.
</p>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Sampling Deviation</h3>
<div class="outline-text-3" id="text-2-1">
<p>
For a given sample \(X=x\), the sampling deviation is denoted as:
</p>
\begin{equation}
d(x) = \hat{\theta}_S(x)-E(\hat{\theta}_S(X)) = \hat{\theta}_S(x) - E(\hat{\theta})
\end{equation}
<p>
where \(E(\hat{\theta})\) is the expected value of the estimator. As mentioned, the estimator is itself a random variable.
</p>
</div>
</div>
<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> Estimator Bias</h3>
<div class="outline-text-3" id="text-2-2">
<p>
We randomly itteratively sample several times. Each time we give an estimate of &theta;. The bias then can be denoted as:
</p>
\begin{equation}
Bias(\hat{\theta}) = E(\hat{\theta})-\theta = E(\hat(\theta)-\theta) =E(error)
\end{equation}
<p>
The distance btw. expected value of &theta; and the real theta being estimated. Bias can describe how far the average of estimates be off-target. We hope the estimator has a lower bias.
</p>
</div>
</div>
<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> Estimator Variance and Standard Error (SE)<a id="SV" name="SV"></a></h3>
<div class="outline-text-3" id="text-2-3">
<p>
The expected value of the squared sampling deviation:
</p>
\begin{equation}
Var(\hat{\theta}) = E[(\hat{\theta} - E[\hat{\theta}])^2]
\end{equation}
<p>
It describes how the estimator varies. SE is the square root of variance. We also hope the estimator has a lower variance.
</p>
</div>
</div>


<div id="outline-container-sec-2-4" class="outline-3">
<h3 id="sec-2-4"><span class="section-number-3">2.4</span> Mean Square Error</h3>
<div class="outline-text-3" id="text-2-4">
<p>
The expected value of the squared error:
</p>
\begin{equation}
MSE(\hat{\theta}) = E[(\hat{\theta}(X)-\theta)^2]
\end{equation}

<p>
The relationship mean squared error = variance + square of bias, namely \(MSE(\hat(\theta))=(Bias(\hat(\theta)))^2 + Var(\hat(\theta))\) can be proven easily. Just do remember the &theta; is also a random variable!
</p>

<p>
Proof:
</p>
\begin{align*}
MSE(\hat(\theta)) &= E[(\hat{\theta}-\theta)^2] = E[\hat{\theta}^2] - 2E[\hat{\theta}]\theta +\theta^2  \\
Bias^2 &= (E[\hat{\theta}]-\theta)^2 = E^2[\hat{\theta}] +\theta^2 - 2E[\hat{\theta}]\theta \\
Var &= E[(\hat{\theta} - E[\hat{\theta}])^2] = E[\hat{\theta}^2] -2E^2[\hat{\theta}] + E^2[\hat{\theta}] = E[\hat{\theta}^2] -E^2[\hat{\theta}]\\
MSE &= Bias^2 +Var
\end{align*}

<p>
We can see that, for an unbiased estimator, the variance equals the mean square error.
</p>
</div>
</div>




<div id="outline-container-sec-2-5" class="outline-3">
<h3 id="sec-2-5"><span class="section-number-3">2.5</span> Example: Estimate Mean and Variance (Unbiased Sample Mean and Unbiased Sample Variance)</h3>
<div class="outline-text-3" id="text-2-5">
<p>
Suppose there is a distribution with &mu; as the mean and &sigma; as the variance. We will rarely know the true variance and mean. The best we can do is estimate them! In <a href="https://www.amazon.com/dp/0262035618/ref=cm_sw_r_cp_ep_dp_H9qizbMRCN9JX">chapter 5 of Deep Learning</a>, the author proves the unbiased estimators of mean and variance of Gaussian distribution \(X~N(\mu,\sigma^2)\).
</p>

<ul class="org-ul">
<li>The unbiased mean estimator is denoted as
</li>
</ul>
\begin{equation}
\hat{\mu} =\frac{1}{N} \sum_{i=1}^{N} x_i
\end{equation}

<ul class="org-ul">
<li>The unbiased variance is denoted as
</li>
</ul>
\begin{equation}
\hat{\sigma^2} =\frac{1}{N-1} \sum_{i=1}^{N} (x_i - \hat{\mu})^2
\end{equation}

<p>
There is another way to explain why the denominator divides the sum by N-1 rather than N. The following is what I quote from <a href="https://onlinecourses.science.psu.edu/stat501/node/254/">here</a>, but edited to suit our case.
</p>

<blockquote>
<p>
What we would really like is for the numerator to add up, in squared units, how far each observed value is from the unknown realization mean &mu;. But, we don't know the real mean &mu;, so we estimate it with the average value. Doing so <b>costs us one degree of freedom</b>. That is, we have to divide by N-1, and not N, because we estimated the unknown real mean &mu;.
</p>
</blockquote>


<p>
What's the variance of the unbiased sample mean \(var(\hat{\mu})\). It turns out that:
</p>
\begin{equation}
var(\hat{\mu}) =\frac{\sigma}{N}
\end{equation}
<p>
If N goes large enough, variance tends to be zero.
</p>

<p>
Notice that the square root of unbiased sample variance is however biased from the real standard error &sigma;. As long as N is large enough, it will still approximate real &sigma; very well.
</p>

<p>
With SE and central limit theorem we can find that the average value as mean estimator will tend to obey Gaussian distribution. So we can use SE to find the confidential interval. If we have two machine learning algorithm, we can find the upper bounds of \(95%\) confidential intervals, of course the algorithm with lower upper bound wins(the interval is more narrow)!!
</p>
</div>

<div id="outline-container-sec-2-5-1" class="outline-4">
<h4 id="sec-2-5-1"><span class="section-number-4">2.5.1</span> Supplement</h4>
<div class="outline-text-4" id="text-2-5-1">
<p>
Since I already mention the degree of freedom DF, see more about DF in the <a href="#DF">following chapter</a>.
</p>
</div>
</div>
</div>
</div>


<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Bias and Variance in Fitting Model</h2>
<div class="outline-text-2" id="text-3">
<p>
What hint can we get from bias and variance of estimator when doing model fitting? Suppose we have a model \(f(x)\) in the real world, due to the noise we get caught into the delimma that we never observe the real \(f(x)\) given an \(x\), but the noisy data \(y=f(x)+\epsilon\). Following the workflow of regression we should first of all find a function family to fit the model. suppose we come up with polynomial \(p_N(x)=a_0+a_1x+ a_2x^2+...+a_Nx^N\). Training, testing&#x2026; How good performance will we finally get?
</p>

<p>
To find out the real model precisely is difficult, two main probelems exist as the following figure shows.
</p>


<div class="figure">
<p><img src="../img/function_function_family.png" alt="function_function_family.png" />
</p>
</div>

<ul class="org-ul">
<li>Suppose \(f(x)\) is the real model. The function family we choose, e.g. like the polynomial family, may not  include the \(f(x)\). This may be caused by lack of domain knowledge or so on.
</li>
<li>We may not even get the best approaximation \(\hat{f}_{best}(x)\) out of the chosen functioon family. This can blame on not good enough sampling, overfitting, underfitting and so on.
</li>
</ul>

<p>
How do we assess the prediction performance? So suppose we finally choose \(p(x)\) as the prediction function. Noted that the prediction function is based on the data, so the prediction function is random variable. If we repeatedly and independently sample data several times, we get different \(g(x)\). The expected value of \(p(x)\) is \(E[p(x)]\). There are some parameters to be introduced:
</p>

<ul class="org-ul">
<li>The variance can be denoted as \(Var = E[(p(x)-E[p(x)])^2]\).
</li>
<li>The bias is \(Bias = E[p(x)] - f(x)\).
</li>
<li>The prediction error is \(E[(p(x)-y)^2]\), i.e. the mean square of error btw. the predicted value and observed value.
</li>
<li>The expected value of \(y\) supposed to be \(f(x)\) if the noise is with zero expected value. (E.g.zero-mean Gaussian noise)
</li>
<li>If the noise is unbiased, \(\sigma^2\) quantifies how much the responses \(y\) vary around the (unknown) mean regression line(the real model) \(f(x)\).
</li>
</ul>

<p>
Fed with these concepts, we can actually compare them with the former chapter on estimator bias and variance and MSE. Try to replace &theta; with y, \(\hat{\theta}\) with \(p(x)\), and \(E[\hat{\theta}]\) with \(E[p(x)]\), then you can find the relationship.
</p>

<p>
///The bias of prediction function is caused by lack-of-fit. It could be either underfitting or overfitting.
</p>

<p>
Let's explore the underlying relationship.
A given observed \((x^*,y^*)\) pair is drawn due to \(y^*=f(x^*) + \epsilon\). For a given set of pbserved data pairs, the expected prediction error is \(E[(p(x^*)-y^*)^2]\). We expand it as:
</p>

\begin{align*}
E[(p(x^*)-y^*)^2] &= E[p^2(x^*)] - 2E[p(x^*)y^*] + E[{y^*}^2] \\
                   &= E[p^2(x^*)] - 2E[p(x^*)]f(x^*) + E[{y^*}^2]
\end{align*}

<p>
Since:
</p>

\begin{align*}
E[p^2(x^*)] &= E[(p(x^*) - E[(p(x^*)])^2] +E^2[p(x^*)] \\
E[{y^*}^2]  &= E[(y*-E[y^*])^2] +E^2[y^*] = E[(y*-f(x^*))^2] +f^2(x^*)
\end{align*}

<p>
So finally we can form the expected prediction error as:
</p>
\begin{align*}
E[(p(x^*)-y^*)^2] &= E[(p(x^*) - E[(p(x^*)])^2] +E^2[p(x^*] - 2E[p(x^*)]f(x^*) + E[(y^*-f(x^*))^2] +f^2(x^*)\\
                  &= E[(p(x^*) - E[(p(x^*)])^2] + E[(y^*-f(x^*))^2] + E^2[p(x^*] -2E[p(x^*)]f(x^*)+f^2(x^*)\\
                  &= E[(p(x^*) - E[(p(x^*)])^2] + E[(y^*-f(x^*))^2] + (E[p(x^*)]-f(x^*))^2
\end{align*}

<div class="center">
<p>
expected prediction error = variance of the estimator + noise + square of bias of the estimator
</p>
</div>

<p>
Notice that whatever effort we make, we can't eliminate the noise term of the error.
</p>

<p>
You may heard of the term <a href="https://en.wikipedia.org/wiki/Lack-of-fit_sum_of_squares">"lack-of-fit sum of squares</a>". There exists a relationship that the residual sum of squares can be decomposed into two components: lack-of-fit sum of squares and sum of squares of the differences between each observed \(y\)-value and the average of all y-values corresponding to the same \(x\)-value.
</p>

<p>
If you compare it carefully with the relationship mentioned above, you can find that the lack-of-fit dependens on the bias estimator and the noise. As said before, the noise is our delimma, however we do can improve our learning algorithm to minimize the bias estimator. Also I quote some figures to intuitively explain the variance estimator and bias estimator.
</p>

<p>
The following figures are cited from <a href="https://theclevermachine.wordpress.com/tag/bias-variance-decomposition/">Model Selection: Underfitting, Overfitting, and the Bias-Variance Tradeoff</a>
</p>


<div class="figure">
<p><img src="../img/bias-variance-simulation1.png" alt="bias-variance-simulation1.png" />
</p>
</div>


<div class="figure">
<p><img src="../img/bias-variance-simulation3.png" alt="bias-variance-simulation3.png" />
</p>
</div>

<p>
<a href="../img/bias-variance-simulation10.png
">../img/bias-variance-simulation10.png
</a>
The real model is \(f(x)=sin(\pi x)\)
The real world with noise is \(y= f(x)+ N(0,\sigma^2)\)
Using the polynomials with \(N=1\), \(N=3\), and \(N=10\) seperately fit the observed data. The data are independently sampled 50 times and for each \(N\) there are 50 prediction functions. The first figure shows us that the model can't capture the real features of the data. It is sensible neither to the real model nor to the noise. So we can see that the variance of those 50 lines is low. But the bias is high. So this is a typical case of underfitting. The third figure in the contrast, capture the real features and and also the noise we don't want. It is sensible not only to the real model but also to the noise. This time, however, we can see that the variance of those 50 lines is low. That's because it regards the noise as a feature, this is a typical case of overfitting. The best is the second figure. As we can see, it has relative lower bias and lower variance. The noise doesn't misguide our model.
</p>

<p>
So the trade-off is actually very parently. If we use a complex model with too much parameters, the model works well on the training data to lower the residules down. However, it may work very bad on test data, cause the model we get represents not only the real model but also the noise. It's not generalized. The bias may be very low but the variance goes too high. If the model is too simple, with not enough parameters, it probably doesn't capture the real features of the real model. So the bias may be very high in spite of lower variance.
</p>
</div>


<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> <a id="DF" name="DF"></a>The Degree of Freedom in Fitting Model</h3>
<div class="outline-text-3" id="text-3-1">
<p>
Well, suppose the real model is \(f(x) = b_0+b_1x\), and the prediction function we get based on the data points drawn from \(y=f(x)+\N(0,\sigma^2)\) is \(\hat{y}=\beta_0+\beta_1x=\). Suppose the noise is normally distributed and at each single value of \(x\) we have the same &sigma; without drift.
</p>

<p>
We can estimate \(\sigma^2\) in two ways.
</p>

<ol class="org-ol">
<li>Sample Variance \(S\). It's nothing new but what I explained in <a href="#SV">chapter 2</a>. We just have to think of it in a situation of fitting model. It tells how far each response \(y_i\) is from the unknown mean. We estimate it with the average value of all \(y\). Doing so "costs us one degree of freedom". That is, we have to divide by \(N-1\) rather than \(N\).
</li>
</ol>

\begin{equation}
S=\frac{\sum_{i=1}^{N}(y_i-y_{ave})^2}{N-1} = \frac{SSTO}{N-1}
\end{equation}


<ol class="org-ol">
<li>Mean Square Error MSE. Instead of the average value of all \(y\). This time we use the predicted value of each reponse, since we assume that the &sigma; doesn't drift at each value of \(x\). By using \(\hat{y_i}\), we must estimate two parameters \(b_0\) and \(b_1\) using all data. So we lose two degrees of freedom. The denominator is therefore \(N-2\)
</li>
</ol>

\begin{equation}
MSE=\frac{\sum_{i=1}^{N}(y_i-\hat{y_i})^2}{N-2} = \frac{SSE}{N-2}
\end{equation}
</div>
</div>
</div>





<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> The Coefficient of Determination, r-squared</h2>
<div class="outline-text-2" id="text-4">
<p>
<a href="https://onlinecourses.science.psu.edu/stat501/node/255/">the reference</a>
Test if the feature is correlated to the respond y
There are two alternative methods for testing whether a linear association exists between the predictor x and the response y in a simple linear regression model, y=&beta;<sub>0</sub>+&beta;<sub>1x</sub> +&epsilon;
</p>

\begin{equation}
H_0: \beta_1=0 vs. H_1: \beta_1 \neq 0
\end{equation}

<ul class="org-ul">
<li><b>t-test for the slope</b>
</li>
<li><b>analysis of variance (ANOVA) F-test</b>
</li>
</ul>
</div>



<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> Concepts that I don't want to mix up.</h3>
<div class="outline-text-3" id="text-4-1">
</div><div id="outline-container-sec-4-1-1" class="outline-4">
<h4 id="sec-4-1-1"><span class="section-number-4">4.1.1</span> Linear Association?</h4>
<div class="outline-text-4" id="text-4-1-1">
<p>
Given a set of pairs \((x_i,y_i)\) (N pairs), figure out if there is linear association btw. \(y\) and \(x\) (if \(\beta_1 = 0\)). \(y_ave\) is the average of all \(y_i\), represents a line with no slope in \(x-y\) plane, it supports \(H_0\). \(\hat{y_i}\) is the predicted value, it supports \(H_1\). We have SSTO = SSE+SSR.
</p>

<ul class="org-ul">
<li>total sum of square: SSTO, \(N-1\) <b>degree of freedom</b>. Because it is the numerator of the unbiased sample variance, and the denominator of the unbiased samole variance is \(N-1\).
</li>
</ul>
\begin{equation}
SSTO = \sum (y_i-y_{ave})^2
\end{equation}

<ul class="org-ul">
<li>error sum of square: SSE, \(N-2\), <b>degree of feedom</b>. As explained <a href="#DF">above</a>, it is the numerator of the MSE.
</li>
</ul>
\begin{equation}
SSE = \sum (y_i-\hat{y_i})^2
\end{equation}

<ul class="org-ul">
<li>regression sum of square: SSR, \(1\) <b>degree of freedom</b>. Since we have SSR = SSTO-SSE
</li>
</ul>
\begin{equation}
SSR = \sum (\hat{y_i}-y_{ave})^2
\end{equation}

<p>
If SSR is large, it suggests that a linear association btw. \(x\) and \(y\)
</p>
</div>
</div>

<div id="outline-container-sec-4-1-2" class="outline-4">
<h4 id="sec-4-1-2"><span class="section-number-4">4.1.2</span> Prediction of The Response on \(x\)</h4>
<div class="outline-text-4" id="text-4-1-2">
<p>
For every single \(x\), we have:
expected prediction error = variance of the estimator + square of bias of the estimator + noise
</p>

\begin{align*}
E[(p(x^*)-y^*)^2] =& E[(p(x^*) - E[p(x^*)])^2] + \\
                   & E[(y^*-f(x^*))^2] + (E[p(x^*)]-f(x^*))^2
\end{align*}

<p>
We can write it with similar notation as SSTO, SSE, SSR.
</p>
\begin{align*}
E[(\hat{u_i}-y_i)^2] =& E[(\hat{y_i} - E[\hat{y_i}])^2] + \\
                   & E[(y_i-f(x_i))^2] + (E[\hat{y_i}]-f(x_i))^2
\end{align*}
<p>
, where \(f(x_i)\) is the response according to the real underlying model \(f\)
</p>
</div>
</div>
</div>

<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> R-squared</h3>
<div class="outline-text-3" id="text-4-2">
<p>
\(r^2\) is alsp called coefficient of determination or r-squared value.
</p>

\begin{equation}
r^2 = \frac{SSR}{SSTO} = 1-\frac{SSE}{SSTO} \,  \in[0,1]
\end{equation}

<p>
Interpretation:
</p>
<div class="center">
<ul class="org-ul">
<li>\(r^2 = 1\): SSR=SSTO, \(y_i=\hat{y_i}\) The observed value lie on the regression line.
</li>
<li>\(r^2 = 0\): \(\hat{y_i}=y_{ave}\), regression line equals to the average line. \(x\) is independent on \(y\).
</li>
<li>\(otherwise\): \(100r^2\%\) of the variation in y is explained by the variation in predictor \(y\). Feature \(x\) is meaningful to prediction of \(y\).
</li>
</ul>
</div>
</div>
</div>
</div>


<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Reference</h2>
<div class="outline-text-2" id="text-5">
<ol class="org-ol">
<li><a href="https://onlinecourses.science.psu.edu/stat501/node/2/">Online-Course of Eberly College of Science</a>
</li>
<li><a href="https://theclevermachine.wordpress.com/tag/bias-variance-decomposition/">Model Selection: Underfitting, Overfitting, and the Bias-Variance Tradeoff</a>
</li>
<li><a href="https://towardsdatascience.com/mse-and-bias-variance-decomposition-77449dd2ff55">MSE and Bias-Variance decomposition</a>
</li>
<li><a href="https://www.amazon.com/dp/0262035618/ref=cm_sw_r_cp_ep_dp_H9qizbMRCN9JX">Deep Learning (Adaptive Computation and Machine Learning series)</a>
</li>
</ol>
</div>
</div>
