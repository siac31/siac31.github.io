<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. 前言</a></li>
<li><a href="#sec-2">2. Anaconda</a>
<ul>
<li><a href="#sec-2-1">2.1. 管理包</a></li>
<li><a href="#sec-2-2">2.2. 管理环境</a>
<ul>
<li><a href="#sec-2-2-1">2.2.1. 0. 安装nb-conda用于notebook自动关联nb-conda环境</a></li>
<li><a href="#sec-2-2-2">2.2.2. 1. 创建环境</a></li>
<li><a href="#sec-2-2-3">2.2.3. 2. 进入环境</a></li>
<li><a href="#sec-2-2-4">2.2.4. 3. 离开环境</a></li>
<li><a href="#sec-2-2-5">2.2.5. 4. 共享环境</a></li>
<li><a href="#sec-2-2-6">2.2.6. 5.列出环境</a></li>
<li><a href="#sec-2-2-7">2.2.7. 6. 删除环境</a></li>
<li><a href="#sec-2-2-8">2.2.8. 7. 查看环境</a></li>
</ul>
</li>
<li><a href="#sec-2-3">2.3. 例子</a></li>
</ul>
</li>
<li><a href="#sec-3">3. Numpy</a>
<ul>
<li><a href="#sec-3-1">3.1. Ndarray多维数组</a>
<ul>
<li><a href="#sec-3-1-1">3.1.1. 创建多维数组</a></li>
<li><a href="#sec-3-1-2">3.1.2. 数据类型转换</a></li>
<li><a href="#sec-3-1-3">3.1.3. 数组形状的改变（重塑，合并，拼接，拆分，转置，随机函数）</a></li>
</ul>
</li>
<li><a href="#sec-3-2">3.2. 数组的索引和切片</a></li>
<li><a href="#sec-3-3">3.3. 案例--</a></li>
</ul>
</li>
</ul>
</div>
</div>
---
layout: post
title: "Notes --- Tools of Data Visualization"
permalink: /:title/
tagxs: [Data Visualization]
---
<head>
   <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
</head>
<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 前言</h2>
<div class="outline-text-2" id="text-1">
<p>
本文属于整理的笔记，内容包含学习笔记，个人总结心得等等，保持持续更新，希望自己能坚持学习。
参考链接：
</p>
<ul class="org-ul">
<li><a href="https://www.douban.com/group/topic/113236201/">史上最全的python包管理器： Anaconda教程</a>
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Anaconda</h2>
<div class="outline-text-2" id="text-2">
<p>
Anaconda以及Jupyter Notebook是数据分析的标准环境。Anaconda可以管理多个python版本环境：
</p>
<ul class="org-ul">
<li>管理包
</li>
<li>管理环境
</li>
</ul>
</div>
<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> 管理包</h3>
<div class="outline-text-3" id="text-2-1">
<ul class="org-ul">
<li>安装包 <span class="underline">conda install package-name</span> ， e.g.：
<ul class="org-ul">
<li><span class="underline">conda insatll pandas numpy</span> (一次多个安装包)
</li>
<li><span class="underline">conda install numpy=1.10</span> (指定version)
</li>
</ul>
</li>
<li>卸载包 <span class="underline">conda remove package-name</span>
</li>
<li>更新包 <span class="underline">conda update package-name</span>
</li>
<li>列出已经安装的包 <span class="underline">conda list</span>
</li>
<li>搜索名字不确定的包 <span class="underline">conda search search-term</span>, e.g. 如果不知道numpy怎么拼写的，则输入 <span class="underline">conda search num</span>
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> 管理环境</h3>
<div class="outline-text-3" id="text-2-2">
<p>
conda为不同项目简历不同的运行环境
</p>
</div>
<div id="outline-container-sec-2-2-1" class="outline-4">
<h4 id="sec-2-2-1"><span class="section-number-4">2.2.1</span> 0. 安装nb-conda用于notebook自动关联nb-conda环境</h4>
<div class="outline-text-4" id="text-2-2-1">
<p>
<span class="underline">conda install nb-conda</span>
</p>
</div>
</div>
<div id="outline-container-sec-2-2-2" class="outline-4">
<h4 id="sec-2-2-2"><span class="section-number-4">2.2.2</span> 1. 创建环境</h4>
<div class="outline-text-4" id="text-2-2-2">
<p>
<span class="underline">conda create -n env-name package-name</span>
</p>
<ul class="org-ul">
<li>env-name环境名称 package-name安装在环境中的包
</li>
<li>-n表示环境的名称name是env-name
</li>
</ul>
<p>
e.g.在名为py3的环境中加入numpy： <span class="underline">conda create -n py3 numpy</span>
</p>

<div class="center">
<p>
!!!创建环境时可以指定安装在环境中的python版本， 对于同时使用python2.x和python3.x时很有用。E.g.：
</p>
<ul class="org-ul">
<li>名为py3的环境中创建python3： <span class="underline">conda create -n py3 python=3</span>
</li>
<li>名为py2的环境中创建python2： <span class="underline">conda create -n py2 python=2</span>
</li>
<li>具体特定版本如python3.6： <span class="underline">conda create -n py3 python=3.6</span>
</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-sec-2-2-3" class="outline-4">
<h4 id="sec-2-2-3"><span class="section-number-4">2.2.3</span> 2. 进入环境</h4>
<div class="outline-text-4" id="text-2-2-3">
<p>
Linux下： <span class="underline">source activate my-env</span>
在环境中对包的管理如1.中所述，不过此时安装的包只在环境中使用
</p>
</div>
</div>

<div id="outline-container-sec-2-2-4" class="outline-4">
<h4 id="sec-2-2-4"><span class="section-number-4">2.2.4</span> 3. 离开环境</h4>
<div class="outline-text-4" id="text-2-2-4">
<p>
Linux下： <span class="underline">source deactivate</span>
</p>
</div>
</div>
<div id="outline-container-sec-2-2-5" class="outline-4">
<h4 id="sec-2-2-5"><span class="section-number-4">2.2.5</span> 4. 共享环境</h4>
<div class="outline-text-4" id="text-2-2-5">
<p>
让别人安装你的代码中使用的所有包以及正确的版本。
在当前环境中： <span class="underline">conda env export &gt; environment.yaml</span>, 将当前环境保存.yaml文件（包含python版本和包名称），就可在刚刚的路径中看到此文件，其他电脑中就可以使用之前导出的环境。
举个例子，进入自己的环境py3， <span class="underline">conda activate py3</span>
更新环境 <span class="underline">conda env update -f=/path/environment.yaml</span>, 其中，-f表示要导出的文件在本地的路径。
如果别人不用conda，则 pip freeze &gt; environment.txt,别人的电脑就可以使用 pip install -r /path/environment.txt
</p>
</div>
</div>
<div id="outline-container-sec-2-2-6" class="outline-4">
<h4 id="sec-2-2-6"><span class="section-number-4">2.2.6</span> 5.列出环境</h4>
<div class="outline-text-4" id="text-2-2-6">
<p>
<span class="underline">conda env list</span>
</p>
</div>
</div>

<div id="outline-container-sec-2-2-7" class="outline-4">
<h4 id="sec-2-2-7"><span class="section-number-4">2.2.7</span> 6. 删除环境</h4>
<div class="outline-text-4" id="text-2-2-7">
<ul class="org-ul">
<li><span class="underline">conda remove &#x2013;name py2 &#x2013;all</span>
</li>
<li>或者 <span class="underline">conda env remove -n env-name</span>
</li>
</ul>
</div>
</div>
<div id="outline-container-sec-2-2-8" class="outline-4">
<h4 id="sec-2-2-8"><span class="section-number-4">2.2.8</span> 7. 查看环境</h4>
<div class="outline-text-4" id="text-2-2-8">
<p>
<span class="underline">conda info &#x2013;envs</span>
</p>
</div>
</div>
</div>

<div id="outline-container-sec-2-3" class="outline-3">
<h3 id="sec-2-3"><span class="section-number-3">2.3</span> 例子</h3>
<div class="outline-text-3" id="text-2-3">
<p>
（以下例子为Ubuntu环境下）创建一个名为numpyexample的新环境：
</p>


<div class="figure">
<p><img src="../img/conda1.png" alt="conda1.png" />
</p>
</div>

<p>
中途会询问你是否在这个环境中下载某些包，最后心得环境建成后，得到以下提示告知你如何进入和退出一个环境：
</p>


<div class="figure">
<p><img src="../img/conda3.png" alt="conda3.png" />
</p>
</div>


<div class="figure">
<p><img src="../img/conda4.png" alt="conda4.png" />
</p>
</div>

<p>
输入source activate numpyexample即可进入到该环境。更改工作空间，输入jupyter notebook即可在notebook中打开一个项目。
</p>
</div>
</div>
</div>
<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Numpy</h2>
<div class="outline-text-2" id="text-3">
<p>
Numpy有着较强的数字计算能力(基于numpy的开源python库Pandas以后再记录），是科学计算的开源python扩充库，是其他数据分析包的基础包，很多的包都是基于Numpy的，比如Pandas，NumPy为python提供了高性能的数组与矩阵运算能力。
</p>
</div>

<div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Ndarray多维数组</h3>
<div class="outline-text-3" id="text-3-1">
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption class="t-above"><span class="table-number">Table 1:</span> 常用函数</caption>

<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">函数</th>
<th scope="col" class="left">使用说明</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">arrange(n)</td>
<td class="left">类似于内置的range函数，创建数组0~n-1</td>
</tr>

<tr>
<td class="left">ones((m,n))</td>
<td class="left">创建指定形状的全1数组或矩阵mxn</td>
</tr>

<tr>
<td class="left">ones\_like(arr1)</td>
<td class="left">根据矩阵arr1和它的dtype创建一个全1矩阵</td>
</tr>

<tr>
<td class="left">zeros,zeros_like</td>
<td class="left">同上，全0</td>
</tr>

<tr>
<td class="left">empty,empty_like</td>
<td class="left">同上，空</td>
</tr>

<tr>
<td class="left">eye(n,dtype='int32'),identity</td>
<td class="left">单位方阵 nxn</td>
</tr>
</tbody>
</table>
</div>

<div id="outline-container-sec-3-1-1" class="outline-4">
<h4 id="sec-3-1-1"><span class="section-number-4">3.1.1</span> 创建多维数组</h4>
<div class="outline-text-4" id="text-3-1-1">
<p>
多维数组的创建可以从列表，元祖，多维数组，上述BIF等方式创立
</p>
<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption class="t-above"><span class="table-number">Table 2:</span> 数据类型和例子</caption>

<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">列表</td>
<td class="left">[1,2,3,4]</td>
</tr>

<tr>
<td class="left">元祖</td>
<td class="left">（1,2,3,4）</td>
</tr>

<tr>
<td class="left">多维数组</td>
<td class="left">[[1,2,3,4],[1,2,3,4]]</td>
</tr>
</tbody>
</table>


<div class="figure">
<p><img src="../img/createArrayfromOthers.png" alt="createArrayfromOthers.png" />
</p>
</div>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">
<caption class="t-above"><span class="table-number">Table 3:</span> 属性</caption>

<colgroup>
<col  class="left" />

<col  class="left" />
</colgroup>
<tbody>
<tr>
<td class="left">属性</td>
<td class="left">解释</td>
</tr>

<tr>
<td class="left">shape (array.shape)</td>
<td class="left">形状，各个数组在数据轴上元素的个数</td>
</tr>

<tr>
<td class="left">dtype</td>
<td class="left">类型</td>
</tr>

<tr>
<td class="left">ndim</td>
<td class="left">数组轴的个数</td>
</tr>

<tr>
<td class="left">itemsize</td>
<td class="left">元素字节大小</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="outline-container-sec-3-1-2" class="outline-4">
<h4 id="sec-3-1-2"><span class="section-number-4">3.1.2</span> 数据类型转换</h4>
<div class="outline-text-4" id="text-3-1-2">
<p>
数据类型可以在数组创建时通过给属性dtype赋值指定，也可以调用BIF astype(np.float64),astype(np.int32)或者astype('string_')强制转换。
</p>


<div class="figure">
<p><img src="../img/datatypeconver.png" alt="datatypeconver.png" />
</p>
</div>
</div>
</div>

<div id="outline-container-sec-3-1-3" class="outline-4">
<h4 id="sec-3-1-3"><span class="section-number-4">3.1.3</span> 数组形状的改变（重塑，合并，拼接，拆分，转置，随机函数）</h4>
<div class="outline-text-4" id="text-3-1-3">
<ul class="org-ul">
<li>重塑 array_to_be_reshaped.reshape()。指定重塑的形状
</li>
</ul>


<div class="figure">
<p><img src="../img/reshape.png" alt="reshape.png" />
</p>
</div>

<ul class="org-ul">
<li>合并 np.concatenate([arr1,arr2],axis)。指定被拼接的数组以及拼接方向，例子如下：
</li>
</ul>
<div class="org-src-container">

<pre class="src src-python"><span class="linenr">1: </span><span style="color: #ffcc80;">arr1</span> = np.arange(6).reshape(3,-1)
<span class="linenr">2: </span><span style="color: #ffcc80;">arr2</span>=np.arange(6,12).reshape(3,-1)
<span class="linenr">3: </span><span style="color: #ffcc80;">arr3</span> = np.concatenate([arr1,arr2],axis=0)
<span class="linenr">4: </span><span style="color: #ffcc80;">arr4</span> = np.concatenate([arr1,arr2],axis=1)
<span class="linenr">5: </span>arr3
<span class="linenr">6: </span>arr4
</pre>
</div>

<p>
输出arr3 arr4分别如下：：
</p>
<pre class="example">
array([[ 0,  1],
       [ 2,  3],
       [ 4,  5],
       [ 6,  7],
       [ 8,  9],
       [10, 11]])

array([[ 0,  1,  6,  7],
       [ 2,  3,  8,  9],
       [ 4,  5, 10, 11]])
</pre>

<div class="center">
<p>
<b>得到arr3,arr4还有另一种方法，np.vstack((arr1,arr2))以及np.hstack((arr1,arr2))。</b>
</p>
</div>

<ul class="org-ul">
<li>拆分np.split(arr,[k,l]) #k,l为整数，代表将数组按照如下拆分 [0:k) [k:l) [l:end]
</li>

<li>装置 transpose()指定一个新的数据轴，例如一个二维数组，默认的数据轴序列为（0,1）代表0轴1轴，转置变为（1,0）1轴变为原来的0轴。三位数值默认(0,1,2)转置后可变为（2,1,0），（2,0,1）等等。通过一个例子来说明：
</li>
</ul>

<p>
假设有一个三位数组：
</p>
<pre class="example">
array([[[ 0,  1,  2,  3],
       [ 4,  5,  6,  7]],

       [[ 8,  9, 10, 11],
        [12, 13, 14, 15]]])
</pre>

<p>
0轴1轴2轴到底长什么样？如下图：
</p>


<div class="figure">
<p><img src="../img/Axis_01.jpg" alt="Axis_01.jpg" />
</p>
</div>

<p>
根据上面所说，最外层括号代表0轴，也就是说，从0轴看下去看到两个“面”，1轴看下去看到两根“线”，2轴看下去只看到4个点。
一个多维数组，最外层的square bracket代表0轴，依次往内推。当对arr.transpose((2,1,0))可知，看2轴的方式变为原来看零轴的方式，看0轴的方式变为原来看2轴的方式。
</p>


<div class="figure">
<p><img src="../img/Axis_02.jpg" alt="Axis_02.jpg" />
</p>
</div>

<p>
最终输出：
</p>
<pre class="example">
array([[[ 0, 8],
        [ 4, 12]],

       [[ 7,  9],
        [ 5, 13]],

       [[ 6, 14],
        [ 2, 10]],

       [[ 7, 15],
        [ 3, 11]]])
</pre>
</div>
</div>
</div>


<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> 数组的索引和切片</h3>
<div class="outline-text-3" id="text-3-2">
<p>
coming soon&#x2026;
</p>
</div>
</div>
<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> 案例--</h3>
<div class="outline-text-3" id="text-3-3">
<p>
coming soon&#x2026;
</p>
</div>
</div>
</div>
